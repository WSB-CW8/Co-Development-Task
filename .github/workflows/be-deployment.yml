name: Update ConfigMap and Deploy

on:
  workflow_dispatch:  # Allows manual triggering of the workflow
jobs:
  update-configmap:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH tunnel
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            # Forward port 6443 (Kubernetes API) to localhost on the GitHub runner
            ssh -o StrictHostKeyChecking=no -L 6443:localhost:6443 ${SSH_USERNAME}@${SSH_HOST} -N

      - name: Set up Kubernetes CLI
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.31.0'

      - name: Wait for SSH tunnel to establish
        run: |
          sleep 5  # Wait for the SSH tunnel to establish

      - name: Check if kubeconfig exists and configure kubectl
        run: |
          if [ ! -f "$HOME/.kube/config" ]; then
            # If kubeconfig does not exist, create it
            mkdir -p $HOME/.kube
            echo "
            apiVersion: v1
            clusters:
              - cluster:
                  server: https://localhost:6443
                  certificate-authority-data: ${CERTIFICATE_AUTHORITY_DATA}
                name: local-cluster
            contexts:
              - context:
                  cluster: local-cluster
                  user: kubernetes-admin
                name: local-context
            current-context: local-context
            users:
              - name: kubernetes-admin
                user:
                  client-certificate-data: ${CLIENT_CERTIFICATE_DATA}
                  client-key-data: ${CLIENT_KEY_DATA}
            " > $HOME/.kube/config
          else
            echo "Kubeconfig already exists, skipping creation."
          fi

          # Ensure the kubeconfig works
          kubectl cluster-info

      - name: Update ConfigMap with Latest Tag
        run: |
          # Get the latest release tag from GitHub
          IMAGE_TAG=$(curl -s https://api.github.com/repos/wsb-cw8/co-Development-Task/releases/latest | jq -r .tag_name)
          
          # Update the Kubernetes ConfigMap
          kubectl -n default set env configmap/env IMAGE_TAG=${IMAGE_TAG}

      - name: Rollout the Deployment
        run: |
          kubectl rollout restart deployment/co-dev-task -n default